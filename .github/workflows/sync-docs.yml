name: Sync Documentation to Web Repository

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/sync-docs.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  sync-docs:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'docs/') || contains(github.event.head_commit.added, 'docs/') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout BaseballCV repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.SYNC_TOKEN }}
        path: baseballcv-main
    
    - name: Checkout BaseballCVWeb repository
      uses: actions/checkout@v4
      with:
        repository: BaseballCV/BaseballCVWeb
        token: ${{ secrets.SYNC_TOKEN }}
        path: baseballcv-web
    
    - name: Sync documentation files
      run: |
        # Remove existing docs content (except .git)
        cd baseballcv-web
        find . -mindepth 1 -maxdepth 1 ! -name '.git' ! -name '.github' ! -name 'README.md' -exec rm -rf {} +
        
        # Copy docs content from main repo
        cp -r ../baseballcv-main/docs/* .
        
        # Copy additional files if they exist
        if [ -f "../baseballcv-main/docs/.gitignore" ]; then
          cp ../baseballcv-main/docs/.gitignore .
        fi
        
        # Ensure _config.yml is properly configured for production
        if [ ! -f "_config.yml" ]; then
          cat > _config.yml << 'EOF'
        title: BaseballCV Documentation
        description: Documentation for BaseballCV - Computer Vision Tools for Baseball Analytics
        remote_theme: just-the-docs/just-the-docs@v0.7.0
        
        url: https://www.baseballcv.com
        baseurl: ""
        
        logo: "/assets/images/logo.png"
        
        aux_links:
          "BaseballCV on GitHub":
            - "//github.com/BaseballCV/BaseballCV"
        
        plugins:
          - jekyll-remote-theme
          - jekyll-seo-tag
          - jekyll-sitemap
          - jekyll-feed
        
        markdown: kramdown
        highlighter: rouge
        kramdown:
          input: GFM
          hard_wrap: false
        
        callouts:
          note:
            title: Note
            color: blue
          tip:
            title: Tip
            color: green
          warning:
            title: Warning
            color: red
        EOF
        fi
        
        # Ensure Gemfile exists
        if [ ! -f "Gemfile" ]; then
          cat > Gemfile << 'EOF'
        source 'https://rubygems.org'
        
        gem "jekyll", "~> 4.3.2"
        gem "jekyll-remote-theme"
        gem "jekyll-seo-tag"
        gem "jekyll-sitemap"
        gem "jekyll-feed"
        gem "webrick"
        
        platforms :mingw, :x64_mingw, :mswin, :jruby do
          gem "tzinfo", ">= 1", "< 3"
          gem "tzinfo-data"
        end
        
        gem "wdm", "~> 0.1.1", :platforms => [:mingw, :x64_mingw, :mswin]
        EOF
        fi
    
    - name: Check for changes
      id: changes
      run: |
        cd baseballcv-web
        if git diff --quiet && git diff --cached --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No changes detected"
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected"
        fi
    
    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        cd baseballcv-web
        
        # Configure git
        git config user.name "Documentation Sync Bot"
        git config user.email "noreply@baseballcv.com"
        
        # Add all changes
        git add .
        
        # Create commit message with details
        COMMIT_MSG="📚 Sync documentation from BaseballCV@${GITHUB_SHA:0:7}
        
        Synced from: https://github.com/BaseballCV/BaseballCV/commit/$GITHUB_SHA
        Triggered by: ${{ github.event.head_commit.message }}
        
        Auto-sync: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        
        git commit -m "$COMMIT_MSG"
        git push origin main
    
    - name: Create deployment summary
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        echo "## 📚 Documentation Sync Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ✅ Successfully synced documentation" >> $GITHUB_STEP_SUMMARY
        echo "**Target:** BaseballCVWeb repository" >> $GITHUB_STEP_SUMMARY
        echo "**Trigger:** Changes in /docs folder" >> $GITHUB_STEP_SUMMARY
        echo "**Website:** https://www.baseballcv.com" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The documentation website will update automatically via webhook deployment." >> $GITHUB_STEP_SUMMARY
    
    - name: No changes summary
      if: steps.changes.outputs.has_changes == 'false'
      run: |
        echo "## 📚 Documentation Sync Skipped" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ⏭️ No changes detected" >> $GITHUB_STEP_SUMMARY
        echo "**Reason:** Documentation content is already up to date" >> $GITHUB_STEP_SUMMARY
